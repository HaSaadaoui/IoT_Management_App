name: Deploy to Raspberry Pi

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Give execute permission to mvnw
        run: chmod +x ./mvnw

      - name: Build project
        run: ./mvnw clean package -DskipTests

      - name: Install OpenVPN 2.5.7
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install build-essential
          sudo apt-get install liblzo2-dev
          sudo apt-get install libpam0g-dev
          curl -L -o openvpn-2.5.7.tar.gz https://swupdate.openvpn.org/community/releases/openvpn-2.5.7.tar.gz
          tar -xvzf openvpn-2.5.7.tar.gz
          cd openvpn-2.5.7
          ./configure
          make
          sudo make install
          cd ..
          mkdir -p ./tmp
          echo "${{ secrets.OVPN_CONFIG }}" | base64 --decode | sudo tee ./tmp/config > /dev/null
          sudo chmod 777 ./tmp/config

      - name: Connect to VPN
        uses: kota65535/github-openvpn-connect-action@v2
        with:
          config_file: ./tmp/config
          username: ${{ secrets.OVPN_USERNAME }}
          password: ${{ secrets.OVPN_PASSWORD }}

      #- name: Decode SSH key
        #run: |
          #echo "${{ secrets.RASPBERRY_SSH_KEY }}" | base64 --decode | sudo tee ./tmp/id_rsa > /dev/null
          #sudo chmod 777 ./tmp/id_rsa

      - name: Copy files to Raspberry Pi
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.RASPBERRY_HOST }}
          username: ${{ secrets.RASPBERRY_USER }}
          password: ${{ secrets.RASPBERRY_PASSWORD }}
          port: 22
          source: "target/sensorprocessor-0.0.1-SNAPSHOT.jar"
          target: "/opt/app/"

      - name: Wait for the file to be copied
        run: |
          sudo apt-get install -y sshpass
          sshpass -p ${{ secrets.RASPBERRY_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.RASPBERRY_USER }}@${{ secrets.RASPBERRY_HOST }} "
          while [ ! -f /opt/app/sensorprocessor-0.0.1-SNAPSHOT.jar ]; do
          echo 'Waiting for file to be copied...'
          sleep 5
          done

      - name: Set file permissions
        run: sudo chmod 777 /opt/app/sensorprocessor-0.0.1-SNAPSHOT.jar

      - name: Restart Spring app with password
        run: |
          sudo apt-get install -y sshpass
          sshpass -p ${{ secrets.RASPBERRY_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.RASPBERRY_USER }}@${{ secrets.RASPBERRY_HOST }} "echo ${{ secrets.RASPBERRY_PASSWORD }} | sudo -S systemctl restart sensorprocessor.service && exit"
