2025-08-13 10:49:30 - Starting SensorprocessorApplication using Java 17.0.15 with PID 24120 (C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App\target\classes started by julien.orrado_sollan in C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App)
2025-08-13 10:49:30 - No active profile set, falling back to 1 default profile: "default"
2025-08-13 10:49:32 - Tomcat initialized with port 8080 (http)
2025-08-13 10:49:32 - Starting service [Tomcat]
2025-08-13 10:49:32 - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-13 10:49:32 - Initializing Spring embedded WebApplicationContext
2025-08-13 10:49:32 - Root WebApplicationContext: initialization completed in 2103 ms
2025-08-13 10:49:33 - HikariPool-1 - Starting...
2025-08-13 10:49:33 - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@9a20cbd
2025-08-13 10:49:33 - HikariPool-1 - Start completed.
2025-08-13 10:49:34 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-13 10:49:34 - 20 mappings in 'requestMappingHandlerMapping'
2025-08-13 10:49:34 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-13 10:49:34 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-13 10:49:35 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-13 10:49:35 - Tomcat started on port 8080 (http) with context path '/'
2025-08-13 10:49:35 - Started SensorprocessorApplication in 5.567 seconds (process running for 6.013)
2025-08-13 10:49:38 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-13 10:49:38 - Initializing Servlet 'dispatcherServlet'
2025-08-13 10:49:38 - Detected StandardServletMultipartResolver
2025-08-13 10:49:38 - Detected AcceptHeaderLocaleResolver
2025-08-13 10:49:38 - Detected FixedThemeResolver
2025-08-13 10:49:38 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@41849bc2
2025-08-13 10:49:38 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@50eef179
2025-08-13 10:49:38 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-13 10:49:38 - Completed initialization in 23 ms
2025-08-13 10:49:38 - GET "/", parameters={}
2025-08-13 10:49:38 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:38 - Resource not found
2025-08-13 10:49:38 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-08-13 10:49:38 - Completed 404 NOT_FOUND
2025-08-13 10:49:39 - GET "/login", parameters={}
2025-08-13 10:49:39 - Mapped to com.amaris.sensorprocessor.controller.HomeController#loginPage()
2025-08-13 10:49:39 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 10:49:41 - Completed 200 OK
2025-08-13 10:49:44 - GET "/css/login-home.css", parameters={}
2025-08-13 10:49:44 - GET "/css/styles.css", parameters={}
2025-08-13 10:49:44 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:44 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 10:49:44 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:44 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:44 - Completed 200 OK
2025-08-13 10:49:44 - Completed 200 OK
2025-08-13 10:49:44 - Completed 200 OK
2025-08-13 10:49:44 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 10:49:44 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:44 - Completed 200 OK
2025-08-13 10:49:44 - GET "/login", parameters={}
2025-08-13 10:49:44 - Mapped to com.amaris.sensorprocessor.controller.HomeController#loginPage()
2025-08-13 10:49:44 - Selected '*/*' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8]
2025-08-13 10:49:44 - Completed 200 OK
2025-08-13 10:49:46 - GET "/home", parameters={}
2025-08-13 10:49:46 - Mapped to com.amaris.sensorprocessor.controller.HomeController#homePage()
2025-08-13 10:49:46 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 10:49:46 - Completed 200 OK
2025-08-13 10:49:46 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 10:49:46 - GET "/image/user-icon.svg", parameters={}
2025-08-13 10:49:46 - GET "/image/gateway-icon.svg", parameters={}
2025-08-13 10:49:46 - GET "/css/styles.css", parameters={}
2025-08-13 10:49:46 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:46 - GET "/css/login-home.css", parameters={}
2025-08-13 10:49:46 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:46 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:46 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 10:49:46 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:46 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:46 - Completed 200 OK
2025-08-13 10:49:46 - Completed 200 OK
2025-08-13 10:49:46 - Completed 200 OK
2025-08-13 10:49:46 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:46 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 10:49:46 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:46 - Completed 200 OK
2025-08-13 10:49:46 - GET "/image/manage-user-account.svg", parameters={}
2025-08-13 10:49:46 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:46 - Completed 200 OK
2025-08-13 10:49:46 - Completed 200 OK
2025-08-13 10:49:46 - Completed 200 OK
2025-08-13 10:49:46 - Completed 200 OK
2025-08-13 10:49:46 - GET "/favicon.ico", parameters={}
2025-08-13 10:49:46 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:46 - Resource not found
2025-08-13 10:49:46 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource favicon.ico.]
2025-08-13 10:49:46 - Completed 404 NOT_FOUND
2025-08-13 10:49:46 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 10:49:46 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-08-13 10:49:46 - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/cbor]
2025-08-13 10:49:46 - Writing [{timestamp=Wed Aug 13 10:49:46 CEST 2025, status=404, error=Not Found, path=/favicon.ico}]
2025-08-13 10:49:47 - Exiting from "ERROR" dispatch, status 404
2025-08-13 10:49:47 - GET "/manage-gateways", parameters={}
2025-08-13 10:49:47 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#manageGateways(Model)
2025-08-13 10:49:47 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 10:49:47 - Completed 200 OK
2025-08-13 10:49:47 - GET "/image/calendar-icon.svg", parameters={}
2025-08-13 10:49:47 - GET "/javascript/manageGateways.js", parameters={}
2025-08-13 10:49:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:47 - GET "/css/styles.css", parameters={}
2025-08-13 10:49:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:47 - GET "/css/manageGateways.css", parameters={}
2025-08-13 10:49:47 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 10:49:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:47 - Completed 200 OK
2025-08-13 10:49:47 - Completed 200 OK
2025-08-13 10:49:47 - Completed 200 OK
2025-08-13 10:49:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:47 - Completed 200 OK
2025-08-13 10:49:47 - Completed 200 OK
2025-08-13 10:49:47 - GET "/image/monitoring-data.svg", parameters={}
2025-08-13 10:49:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:47 - GET "/image/edit-icon.svg", parameters={}
2025-08-13 10:49:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:47 - GET "/image/delete-icon.svg", parameters={}
2025-08-13 10:49:47 - GET "/image/search-icon.svg", parameters={}
2025-08-13 10:49:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:47 - Completed 200 OK
2025-08-13 10:49:47 - Completed 200 OK
2025-08-13 10:49:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:49:47 - Completed 200 OK
2025-08-13 10:49:48 - Completed 200 OK
2025-08-13 10:50:04 - GET "/manage-gateways/monitoring/leva-rpi-mantu/view?ip=10.243.129.10", parameters={masked}
2025-08-13 10:50:04 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#monitoringView(String, String, Model)
2025-08-13 10:50:04 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 10:50:04 - Completed 200 OK
2025-08-13 10:50:04 - GET "/css/styles.css", parameters={}
2025-08-13 10:50:04 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:50:04 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 10:50:04 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:50:04 - Completed 200 OK
2025-08-13 10:50:04 - GET "/css/monitoringGateway.css", parameters={}
2025-08-13 10:50:04 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:50:04 - Completed 200 OK
2025-08-13 10:50:04 - GET "/image/battery.svg", parameters={}
2025-08-13 10:50:04 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:50:04 - Completed 200 OK
2025-08-13 10:50:04 - GET "/image/thermostat.svg", parameters={}
2025-08-13 10:50:04 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:50:04 - GET "/image/toggle_off.svg", parameters={}
2025-08-13 10:50:04 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:50:04 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 10:50:04 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 10:50:04 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:50:04 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:50:04 - GET "/javascript/monitoringGateway.js", parameters={}
2025-08-13 10:50:04 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:50:04 - Completed 200 OK
2025-08-13 10:50:04 - Completed 200 OK
2025-08-13 10:50:04 - Completed 200 OK
2025-08-13 10:50:04 - Completed 200 OK
2025-08-13 10:50:04 - Completed 200 OK
2025-08-13 10:50:04 - Completed 200 OK
2025-08-13 10:50:04 - GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 10:50:04 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#streamMonitoringData(String, String)
2025-08-13 10:50:05 - [6c01ff8] HTTP GET http://monitoring:8081/api/monitoring/gateway/rpi-mantu?ip=10.243.129.10
2025-08-13 10:50:05 - Started async request for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 10:50:05 - Exiting but response remains open for further handling
2025-08-13 10:50:05 - Erreur lors de la récupération des données de monitoring
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://monitoring:8081/api/monitoring/gateway/rpi-mantu [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:325)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:443)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onError(SecurityReactorContextConfiguration.java:191)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:600)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:376)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:123)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:131)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.UnknownHostException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 10:50:05 - Async result set for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 10:50:05 - Performing async dispatch for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 10:50:05 - "ASYNC" dispatch for GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 10:50:05 - Resume with async result [org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monit (truncated)...]
2025-08-13 10:50:05 - Unresolved failure from "ASYNC" dispatch: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
2025-08-13 10:50:05 - Servlet.service() for servlet [dispatcherServlet] threw exception
io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 10:50:05 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries ] with root cause
io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 10:50:05 - "ERROR" dispatch for GET "/error?ip=10.243.129.10", parameters={masked}
2025-08-13 10:50:05 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-08-13 10:50:05 - No match for [text/event-stream], supported: [application/json, application/*+json, application/cbor]
2025-08-13 10:50:05 - Using @ExceptionHandler org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#mediaTypeNotAcceptable(HttpServletRequest)
2025-08-13 10:50:05 - Using 'text/event-stream', given [text/event-stream] and supported [text/plain, */*, application/json, application/*+json, application/cbor]
2025-08-13 10:50:05 - Nothing to write: null body
2025-08-13 10:50:05 - Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation]
2025-08-13 10:50:05 - Exiting from "ERROR" dispatch, status 500
2025-08-13 10:50:05 - Servlet container error notification for "/error"
2025-08-13 10:50:05 - [4f83ab4a] HTTP GET http://monitoring:8081/api/monitoring/gateway/stop/rpi-mantu
2025-08-13 10:50:06 - Erreur lors de l'arrêt du monitoring pour gateway rpi-mantu
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://monitoring:8081/api/monitoring/gateway/stop/rpi-mantu [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:325)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:443)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onError(SecurityReactorContextConfiguration.java:191)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:600)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:376)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:123)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:131)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.UnknownHostException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 10:50:06 - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://monitoring:8081/api/monitoring/gateway/stop/rpi-mantu [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:325)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:443)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onError(SecurityReactorContextConfiguration.java:191)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:600)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:376)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:123)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:131)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.UnknownHostException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 10:50:52 - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-13 10:50:52 - Graceful shutdown complete
2025-08-13 10:50:54 - HikariPool-1 - Shutdown initiated...
2025-08-13 10:50:54 - HikariPool-1 - Shutdown completed.
2025-08-13 10:51:33 - Starting SensorprocessorApplication using Java 17.0.15 with PID 2228 (C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App\target\classes started by julien.orrado_sollan in C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App)
2025-08-13 10:51:33 - No active profile set, falling back to 1 default profile: "default"
2025-08-13 10:51:34 - Tomcat initialized with port 8080 (http)
2025-08-13 10:51:34 - Starting service [Tomcat]
2025-08-13 10:51:34 - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-13 10:51:34 - Initializing Spring embedded WebApplicationContext
2025-08-13 10:51:34 - Root WebApplicationContext: initialization completed in 1736 ms
2025-08-13 10:51:35 - HikariPool-1 - Starting...
2025-08-13 10:51:35 - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@33e0c716
2025-08-13 10:51:35 - HikariPool-1 - Start completed.
2025-08-13 10:51:36 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-13 10:51:36 - 20 mappings in 'requestMappingHandlerMapping'
2025-08-13 10:51:36 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-13 10:51:36 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-13 10:51:37 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-13 10:51:37 - Tomcat started on port 8080 (http) with context path '/'
2025-08-13 10:51:37 - Started SensorprocessorApplication in 5.513 seconds (process running for 6.02)
2025-08-13 10:51:47 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-13 10:51:47 - Initializing Servlet 'dispatcherServlet'
2025-08-13 10:51:47 - Detected StandardServletMultipartResolver
2025-08-13 10:51:47 - Detected AcceptHeaderLocaleResolver
2025-08-13 10:51:47 - Detected FixedThemeResolver
2025-08-13 10:51:47 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@186df964
2025-08-13 10:51:47 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3a52884c
2025-08-13 10:51:47 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-13 10:51:47 - Completed initialization in 2 ms
2025-08-13 10:51:47 - GET "/login", parameters={}
2025-08-13 10:51:47 - Mapped to com.amaris.sensorprocessor.controller.HomeController#loginPage()
2025-08-13 10:51:47 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 10:51:47 - Completed 200 OK
2025-08-13 10:51:47 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 10:51:47 - GET "/css/login-home.css", parameters={}
2025-08-13 10:51:47 - GET "/css/styles.css", parameters={}
2025-08-13 10:51:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:47 - Completed 200 OK
2025-08-13 10:51:47 - Completed 200 OK
2025-08-13 10:51:47 - Completed 200 OK
2025-08-13 10:51:47 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 10:51:47 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:47 - Completed 200 OK
2025-08-13 10:51:48 - GET "/home", parameters={}
2025-08-13 10:51:48 - Mapped to com.amaris.sensorprocessor.controller.HomeController#homePage()
2025-08-13 10:51:48 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 10:51:48 - Completed 200 OK
2025-08-13 10:51:48 - GET "/css/styles.css", parameters={}
2025-08-13 10:51:48 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:48 - Completed 200 OK
2025-08-13 10:51:48 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 10:51:48 - GET "/image/user-icon.svg", parameters={}
2025-08-13 10:51:48 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:48 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:48 - GET "/css/login-home.css", parameters={}
2025-08-13 10:51:48 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:48 - GET "/image/manage-user-account.svg", parameters={}
2025-08-13 10:51:48 - Completed 200 OK
2025-08-13 10:51:48 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:48 - Completed 200 OK
2025-08-13 10:51:48 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 10:51:48 - Completed 200 OK
2025-08-13 10:51:48 - GET "/image/gateway-icon.svg", parameters={}
2025-08-13 10:51:48 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:48 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:48 - Completed 200 OK
2025-08-13 10:51:48 - Completed 200 OK
2025-08-13 10:51:48 - Completed 200 OK
2025-08-13 10:51:49 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 10:51:49 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:49 - Completed 200 OK
2025-08-13 10:51:49 - GET "/manage-gateways", parameters={}
2025-08-13 10:51:49 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#manageGateways(Model)
2025-08-13 10:51:49 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 10:51:49 - Completed 200 OK
2025-08-13 10:51:49 - GET "/css/styles.css", parameters={}
2025-08-13 10:51:49 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:49 - GET "/css/manageGateways.css", parameters={}
2025-08-13 10:51:49 - GET "/javascript/manageGateways.js", parameters={}
2025-08-13 10:51:49 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:49 - Completed 200 OK
2025-08-13 10:51:49 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:49 - GET "/image/calendar-icon.svg", parameters={}
2025-08-13 10:51:49 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 10:51:49 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:49 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:49 - Completed 200 OK
2025-08-13 10:51:49 - Completed 200 OK
2025-08-13 10:51:49 - GET "/image/search-icon.svg", parameters={}
2025-08-13 10:51:49 - Completed 200 OK
2025-08-13 10:51:49 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:49 - Completed 200 OK
2025-08-13 10:51:49 - Completed 200 OK
2025-08-13 10:51:49 - GET "/image/delete-icon.svg", parameters={}
2025-08-13 10:51:49 - GET "/image/edit-icon.svg", parameters={}
2025-08-13 10:51:49 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:49 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:49 - GET "/image/monitoring-data.svg", parameters={}
2025-08-13 10:51:49 - Completed 200 OK
2025-08-13 10:51:49 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:49 - Completed 200 OK
2025-08-13 10:51:49 - Completed 200 OK
2025-08-13 10:51:50 - GET "/manage-gateways/monitoring/gateway-001/view?ip=192.168.1.10", parameters={masked}
2025-08-13 10:51:50 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#monitoringView(String, String, Model)
2025-08-13 10:51:50 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 10:51:50 - Completed 200 OK
2025-08-13 10:51:50 - GET "/css/styles.css", parameters={}
2025-08-13 10:51:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:50 - GET "/image/battery.svg", parameters={}
2025-08-13 10:51:50 - GET "/css/monitoringGateway.css", parameters={}
2025-08-13 10:51:50 - Completed 200 OK
2025-08-13 10:51:50 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 10:51:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:50 - Completed 200 OK
2025-08-13 10:51:50 - Completed 200 OK
2025-08-13 10:51:50 - Completed 200 OK
2025-08-13 10:51:50 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 10:51:50 - GET "/image/thermostat.svg", parameters={}
2025-08-13 10:51:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:51 - Completed 200 OK
2025-08-13 10:51:51 - Completed 200 OK
2025-08-13 10:51:51 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 10:51:51 - GET "/javascript/monitoringGateway.js", parameters={}
2025-08-13 10:51:51 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:51 - GET "/image/toggle_off.svg", parameters={}
2025-08-13 10:51:51 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:51 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 10:51:51 - Completed 200 OK
2025-08-13 10:51:51 - Completed 200 OK
2025-08-13 10:51:51 - Completed 200 OK
2025-08-13 10:51:51 - GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 10:51:51 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#streamMonitoringData(String, String)
2025-08-13 10:52:09 - [fe249e1] HTTP GET http://monitoring:8081/api/monitoring/gateway/rpi-mantu?ip=10.243.129.10
2025-08-13 10:52:20 - Started async request for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 10:52:20 - Exiting but response remains open for further handling
2025-08-13 10:52:20 - Erreur lors de la récupération des données de monitoring
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://monitoring:8081/api/monitoring/gateway/rpi-mantu [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:325)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:443)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onError(SecurityReactorContextConfiguration.java:191)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:600)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:376)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:123)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:131)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.UnknownHostException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 10:52:20 - Async result set for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 10:52:20 - Performing async dispatch for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 10:52:20 - "ASYNC" dispatch for GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 10:52:20 - Resume with async result [org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monit (truncated)...]
2025-08-13 10:52:20 - Unresolved failure from "ASYNC" dispatch: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
2025-08-13 10:52:20 - Servlet.service() for servlet [dispatcherServlet] threw exception
io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 10:52:20 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries ] with root cause
io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 10:52:20 - "ERROR" dispatch for GET "/error?ip=10.243.129.10", parameters={masked}
2025-08-13 10:52:20 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-08-13 10:52:20 - No match for [text/event-stream], supported: [application/json, application/*+json, application/cbor]
2025-08-13 10:52:20 - Using @ExceptionHandler org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#mediaTypeNotAcceptable(HttpServletRequest)
2025-08-13 10:52:20 - Using 'text/event-stream', given [text/event-stream] and supported [text/plain, */*, application/json, application/*+json, application/cbor]
2025-08-13 10:52:20 - Nothing to write: null body
2025-08-13 10:52:20 - Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation]
2025-08-13 10:52:20 - Exiting from "ERROR" dispatch, status 500
2025-08-13 10:52:20 - Servlet container error notification for "/error"
2025-08-13 10:52:27 - [4d98b4c7] HTTP GET http://monitoring:8081/api/monitoring/gateway/stop/rpi-mantu
2025-08-13 10:52:27 - Erreur lors de l'arrêt du monitoring pour gateway rpi-mantu
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://monitoring:8081/api/monitoring/gateway/stop/rpi-mantu [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:325)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:443)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onError(SecurityReactorContextConfiguration.java:191)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:600)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:376)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:123)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:131)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.UnknownHostException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 10:52:27 - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://monitoring:8081/api/monitoring/gateway/stop/rpi-mantu [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:325)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:443)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onError(SecurityReactorContextConfiguration.java:191)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:600)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:376)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:123)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:131)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.UnknownHostException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 10:52:43 - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-13 10:52:43 - Graceful shutdown complete
2025-08-13 10:52:45 - HikariPool-1 - Shutdown initiated...
2025-08-13 10:52:45 - HikariPool-1 - Shutdown completed.
2025-08-13 11:41:00 - Starting SensorprocessorApplication using Java 17.0.15 with PID 5664 (C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App\target\classes started by julien.orrado_sollan in C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App)
2025-08-13 11:41:00 - No active profile set, falling back to 1 default profile: "default"
2025-08-13 11:41:02 - Tomcat initialized with port 8080 (http)
2025-08-13 11:41:02 - Starting service [Tomcat]
2025-08-13 11:41:02 - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-13 11:41:02 - Initializing Spring embedded WebApplicationContext
2025-08-13 11:41:02 - Root WebApplicationContext: initialization completed in 1741 ms
2025-08-13 11:41:02 - HikariPool-1 - Starting...
2025-08-13 11:41:02 - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@5eb0a686
2025-08-13 11:41:02 - HikariPool-1 - Start completed.
2025-08-13 11:41:03 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-13 11:41:04 - 20 mappings in 'requestMappingHandlerMapping'
2025-08-13 11:41:04 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-13 11:41:04 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-13 11:41:04 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-13 11:41:05 - Tomcat started on port 8080 (http) with context path '/'
2025-08-13 11:41:05 - Started SensorprocessorApplication in 5.192 seconds (process running for 5.803)
2025-08-13 11:42:11 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-13 11:42:11 - Initializing Servlet 'dispatcherServlet'
2025-08-13 11:42:11 - Detected StandardServletMultipartResolver
2025-08-13 11:42:11 - Detected AcceptHeaderLocaleResolver
2025-08-13 11:42:11 - Detected FixedThemeResolver
2025-08-13 11:42:11 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6e64431b
2025-08-13 11:42:11 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@44310372
2025-08-13 11:42:11 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-13 11:42:11 - Completed initialization in 7 ms
2025-08-13 11:42:11 - GET "/", parameters={}
2025-08-13 11:42:11 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:11 - Resource not found
2025-08-13 11:42:11 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-08-13 11:42:11 - Completed 404 NOT_FOUND
2025-08-13 11:42:11 - GET "/login", parameters={}
2025-08-13 11:42:11 - Mapped to com.amaris.sensorprocessor.controller.HomeController#loginPage()
2025-08-13 11:42:11 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 11:42:11 - Completed 200 OK
2025-08-13 11:42:11 - GET "/css/styles.css", parameters={}
2025-08-13 11:42:11 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 11:42:11 - GET "/css/login-home.css", parameters={}
2025-08-13 11:42:11 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:11 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:11 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:12 - Completed 200 OK
2025-08-13 11:42:12 - Completed 200 OK
2025-08-13 11:42:12 - Completed 200 OK
2025-08-13 11:42:12 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 11:42:12 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:12 - Completed 200 OK
2025-08-13 11:42:16 - GET "/home", parameters={}
2025-08-13 11:42:16 - Mapped to com.amaris.sensorprocessor.controller.HomeController#homePage()
2025-08-13 11:42:16 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 11:42:16 - Completed 200 OK
2025-08-13 11:42:16 - GET "/css/login-home.css", parameters={}
2025-08-13 11:42:16 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 11:42:16 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:16 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:16 - GET "/css/styles.css", parameters={}
2025-08-13 11:42:16 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 11:42:16 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:16 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:16 - Completed 200 OK
2025-08-13 11:42:16 - Completed 200 OK
2025-08-13 11:42:16 - Completed 200 OK
2025-08-13 11:42:16 - Completed 200 OK
2025-08-13 11:42:16 - GET "/image/manage-user-account.svg", parameters={}
2025-08-13 11:42:16 - GET "/image/user-icon.svg", parameters={}
2025-08-13 11:42:16 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:16 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:16 - Completed 200 OK
2025-08-13 11:42:16 - Completed 200 OK
2025-08-13 11:42:16 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 11:42:16 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:16 - GET "/image/gateway-icon.svg", parameters={}
2025-08-13 11:42:16 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:16 - Completed 200 OK
2025-08-13 11:42:16 - Completed 200 OK
2025-08-13 11:42:17 - GET "/manage-gateways", parameters={}
2025-08-13 11:42:17 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#manageGateways(Model)
2025-08-13 11:42:17 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 11:42:17 - Completed 200 OK
2025-08-13 11:42:17 - GET "/css/styles.css", parameters={}
2025-08-13 11:42:17 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:17 - GET "/image/calendar-icon.svg", parameters={}
2025-08-13 11:42:17 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 11:42:17 - GET "/css/manageGateways.css", parameters={}
2025-08-13 11:42:17 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:17 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:17 - GET "/javascript/manageGateways.js", parameters={}
2025-08-13 11:42:17 - Completed 200 OK
2025-08-13 11:42:17 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:17 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:17 - Completed 200 OK
2025-08-13 11:42:17 - Completed 200 OK
2025-08-13 11:42:17 - Completed 200 OK
2025-08-13 11:42:17 - Completed 200 OK
2025-08-13 11:42:17 - GET "/image/search-icon.svg", parameters={}
2025-08-13 11:42:17 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:17 - Completed 200 OK
2025-08-13 11:42:17 - GET "/image/delete-icon.svg", parameters={}
2025-08-13 11:42:17 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:17 - GET "/image/monitoring-data.svg", parameters={}
2025-08-13 11:42:17 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:17 - GET "/image/edit-icon.svg", parameters={}
2025-08-13 11:42:17 - Completed 200 OK
2025-08-13 11:42:17 - Completed 200 OK
2025-08-13 11:42:17 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:17 - Completed 200 OK
2025-08-13 11:42:24 - GET "/", parameters={}
2025-08-13 11:42:24 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:24 - Resource not found
2025-08-13 11:42:24 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-08-13 11:42:24 - Completed 404 NOT_FOUND
2025-08-13 11:42:24 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 11:42:24 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-08-13 11:42:25 - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-13 11:42:25 - Exiting from "ERROR" dispatch, status 404
2025-08-13 11:42:26 - GET "/", parameters={}
2025-08-13 11:42:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:26 - Resource not found
2025-08-13 11:42:26 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-08-13 11:42:26 - Completed 404 NOT_FOUND
2025-08-13 11:42:26 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 11:42:26 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-08-13 11:42:26 - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-13 11:42:26 - Exiting from "ERROR" dispatch, status 404
2025-08-13 11:42:32 - GET "/", parameters={}
2025-08-13 11:42:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:42:32 - Resource not found
2025-08-13 11:42:32 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-08-13 11:42:32 - Completed 404 NOT_FOUND
2025-08-13 11:42:32 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 11:42:32 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-08-13 11:42:32 - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-13 11:42:32 - Exiting from "ERROR" dispatch, status 404
2025-08-13 11:43:12 - GET "/", parameters={}
2025-08-13 11:43:12 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:43:12 - Resource not found
2025-08-13 11:43:12 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-08-13 11:43:12 - Completed 404 NOT_FOUND
2025-08-13 11:43:12 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 11:43:12 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-08-13 11:43:12 - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-13 11:43:12 - Exiting from "ERROR" dispatch, status 404
2025-08-13 11:43:12 - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-08-13 11:43:12 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:43:12 - Resource not found
2025-08-13 11:43:12 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .well-known/appspecific/com.chrome.devtools.json.]
2025-08-13 11:43:12 - Completed 404 NOT_FOUND
2025-08-13 11:43:12 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 11:43:12 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-08-13 11:43:12 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/cbor]
2025-08-13 11:43:12 - Writing [{timestamp=Wed Aug 13 11:43:12 CEST 2025, status=404, error=Not Found, path=/.well-known/appspecific (truncated)...]
2025-08-13 11:43:12 - GET "/favicon.ico", parameters={}
2025-08-13 11:43:12 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:43:12 - Resource not found
2025-08-13 11:43:12 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource favicon.ico.]
2025-08-13 11:43:12 - Completed 404 NOT_FOUND
2025-08-13 11:43:12 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 11:43:12 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-08-13 11:43:12 - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/cbor]
2025-08-13 11:43:12 - Writing [{timestamp=Wed Aug 13 11:43:12 CEST 2025, status=404, error=Not Found, path=/favicon.ico}]
2025-08-13 11:43:12 - Exiting from "ERROR" dispatch, status 404
2025-08-13 11:43:12 - Exiting from "ERROR" dispatch, status 404
2025-08-13 11:44:26 - GET "/", parameters={}
2025-08-13 11:44:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:44:26 - Resource not found
2025-08-13 11:44:26 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-08-13 11:44:26 - Completed 404 NOT_FOUND
2025-08-13 11:44:26 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 11:44:26 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-08-13 11:44:26 - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-13 11:44:26 - Exiting from "ERROR" dispatch, status 404
2025-08-13 11:44:26 - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-08-13 11:44:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:44:26 - Resource not found
2025-08-13 11:44:26 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .well-known/appspecific/com.chrome.devtools.json.]
2025-08-13 11:44:26 - Completed 404 NOT_FOUND
2025-08-13 11:44:26 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 11:44:26 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-08-13 11:44:26 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/cbor]
2025-08-13 11:44:26 - Writing [{timestamp=Wed Aug 13 11:44:26 CEST 2025, status=404, error=Not Found, path=/.well-known/appspecific (truncated)...]
2025-08-13 11:44:26 - Exiting from "ERROR" dispatch, status 404
2025-08-13 11:44:32 - GET "/", parameters={}
2025-08-13 11:44:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:44:32 - Resource not found
2025-08-13 11:44:32 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-08-13 11:44:32 - Completed 404 NOT_FOUND
2025-08-13 11:44:32 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 11:44:32 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-08-13 11:44:32 - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-13 11:44:32 - Exiting from "ERROR" dispatch, status 404
2025-08-13 11:44:32 - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-08-13 11:44:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:44:32 - Resource not found
2025-08-13 11:44:32 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .well-known/appspecific/com.chrome.devtools.json.]
2025-08-13 11:44:32 - Completed 404 NOT_FOUND
2025-08-13 11:44:32 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 11:44:32 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-08-13 11:44:32 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/cbor]
2025-08-13 11:44:32 - Writing [{timestamp=Wed Aug 13 11:44:32 CEST 2025, status=404, error=Not Found, path=/.well-known/appspecific (truncated)...]
2025-08-13 11:44:32 - Exiting from "ERROR" dispatch, status 404
2025-08-13 11:45:51 - GET "/login", parameters={}
2025-08-13 11:45:51 - Mapped to com.amaris.sensorprocessor.controller.HomeController#loginPage()
2025-08-13 11:45:51 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 11:45:51 - Completed 200 OK
2025-08-13 11:45:51 - GET "/.well-known/appspecific/com.chrome.devtools.json", parameters={}
2025-08-13 11:45:51 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:45:51 - GET "/css/styles.css", parameters={}
2025-08-13 11:45:51 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:45:51 - GET "/css/login-home.css", parameters={}
2025-08-13 11:45:51 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:45:51 - Resource not found
2025-08-13 11:45:51 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .well-known/appspecific/com.chrome.devtools.json.]
2025-08-13 11:45:51 - Completed 404 NOT_FOUND
2025-08-13 11:45:51 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 11:45:51 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:45:51 - Completed 200 OK
2025-08-13 11:45:51 - Completed 200 OK
2025-08-13 11:45:51 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 11:45:51 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-08-13 11:45:51 - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/cbor]
2025-08-13 11:45:51 - Writing [{timestamp=Wed Aug 13 11:45:51 CEST 2025, status=404, error=Not Found, path=/.well-known/appspecific (truncated)...]
2025-08-13 11:45:51 - Exiting from "ERROR" dispatch, status 404
2025-08-13 11:45:51 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 11:45:51 - Completed 200 OK
2025-08-13 11:45:51 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:45:51 - Completed 200 OK
2025-08-13 11:46:19 - GET "/home", parameters={}
2025-08-13 11:46:19 - Mapped to com.amaris.sensorprocessor.controller.HomeController#homePage()
2025-08-13 11:46:19 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 11:46:19 - Completed 200 OK
2025-08-13 11:46:19 - GET "/css/styles.css", parameters={}
2025-08-13 11:46:19 - GET "/css/login-home.css", parameters={}
2025-08-13 11:46:19 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 11:46:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:19 - GET "/image/gateway-icon.svg", parameters={}
2025-08-13 11:46:19 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 11:46:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:19 - GET "/image/user-icon.svg", parameters={}
2025-08-13 11:46:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:19 - Completed 200 OK
2025-08-13 11:46:19 - Completed 200 OK
2025-08-13 11:46:19 - Completed 200 OK
2025-08-13 11:46:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:19 - Completed 200 OK
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - GET "/image/manage-user-account.svg", parameters={}
2025-08-13 11:46:20 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - GET "/manage-gateways", parameters={}
2025-08-13 11:46:20 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#manageGateways(Model)
2025-08-13 11:46:20 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - GET "/css/styles.css", parameters={}
2025-08-13 11:46:20 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 11:46:20 - GET "/css/manageGateways.css", parameters={}
2025-08-13 11:46:20 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:20 - GET "/javascript/manageGateways.js", parameters={}
2025-08-13 11:46:20 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:20 - GET "/image/calendar-icon.svg", parameters={}
2025-08-13 11:46:20 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:20 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - GET "/image/search-icon.svg", parameters={}
2025-08-13 11:46:20 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - GET "/image/delete-icon.svg", parameters={}
2025-08-13 11:46:20 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:20 - GET "/image/monitoring-data.svg", parameters={}
2025-08-13 11:46:20 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - GET "/image/edit-icon.svg", parameters={}
2025-08-13 11:46:20 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:20 - Completed 200 OK
2025-08-13 11:46:23 - GET "/manage-gateways/monitoring/gateway-001/view?ip=192.168.1.10", parameters={masked}
2025-08-13 11:46:23 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#monitoringView(String, String, Model)
2025-08-13 11:46:23 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 11:46:23 - Completed 200 OK
2025-08-13 11:46:23 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 11:46:23 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:23 - GET "/image/battery.svg", parameters={}
2025-08-13 11:46:23 - GET "/css/monitoringGateway.css", parameters={}
2025-08-13 11:46:23 - GET "/css/styles.css", parameters={}
2025-08-13 11:46:23 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:23 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:23 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:23 - Completed 200 OK
2025-08-13 11:46:23 - Completed 200 OK
2025-08-13 11:46:23 - Completed 200 OK
2025-08-13 11:46:23 - Completed 200 OK
2025-08-13 11:46:23 - GET "/image/thermostat.svg", parameters={}
2025-08-13 11:46:23 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:23 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 11:46:23 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:23 - Completed 200 OK
2025-08-13 11:46:23 - Completed 200 OK
2025-08-13 11:46:23 - GET "/javascript/monitoringGateway.js", parameters={}
2025-08-13 11:46:23 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:23 - Completed 200 OK
2025-08-13 11:46:23 - GET "/image/toggle_off.svg", parameters={}
2025-08-13 11:46:23 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:23 - Completed 200 OK
2025-08-13 11:46:23 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 11:46:23 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:46:23 - Completed 200 OK
2025-08-13 11:46:23 - GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 11:46:23 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#streamMonitoringData(String, String)
2025-08-13 11:46:33 - [43e9d468] HTTP GET http://localhost:8081/api/monitoring/gateway/rpi-mantu?ip=10.243.129.10
2025-08-13 11:46:39 - Started async request for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:46:39 - Exiting but response remains open for further handling
2025-08-13 11:46:43 - [43e9d468] [fff183f5-1] Response 200 OK
2025-08-13 11:46:43 - [43e9d468] [fff183f5-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:46:42, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:46:53 - [43e9d468] [fff183f5-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:46:53, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:47:04 - [43e9d468] [fff183f5-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:47:03, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:47:14 - [43e9d468] [fff183f5-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:47:14, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:47:24 - [43e9d468] [fff183f5-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:47:24, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:47:24 - Async result set for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:47:24 - Performing async dispatch for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:47:25 - Servlet container error notification for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:47:25 - "ASYNC" dispatch for GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 11:47:25 - Resume with async result [org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream fa (truncated)...]
2025-08-13 11:47:25 - Looks like the client has gone away: org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to flush: java.io.IOException: Une connexion établie a été abandonnée par un logiciel de votre ordinateur hôte (For a full stack trace, set the log category 'org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog@65e040e6' to TRACE level.)
2025-08-13 11:47:25 - Exiting from "ASYNC" dispatch, status 200
2025-08-13 11:47:29 - [4c94ed15] HTTP GET http://localhost:8081/api/monitoring/gateway/stop/rpi-mantu
2025-08-13 11:47:29 - [43e9d468] Cancel signal (to close connection)
2025-08-13 11:47:42 - [4c94ed15] [e7b05053-1] Response 200 OK
2025-08-13 11:47:42 - Monitoring stopped for gateway rpi-mantu
2025-08-13 11:49:19 - GET "/manage-gateways/monitoring/rpi-mantu/view?ip=10.243.129.10", parameters={masked}
2025-08-13 11:49:19 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#monitoringView(String, String, Model)
2025-08-13 11:49:19 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 11:49:19 - Completed 200 OK
2025-08-13 11:49:19 - GET "/css/styles.css", parameters={}
2025-08-13 11:49:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:49:19 - Completed 200 OK
2025-08-13 11:49:19 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 11:49:19 - GET "/css/monitoringGateway.css", parameters={}
2025-08-13 11:49:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:49:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:49:19 - GET "/image/battery.svg", parameters={}
2025-08-13 11:49:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:49:19 - Completed 200 OK
2025-08-13 11:49:19 - Completed 200 OK
2025-08-13 11:49:19 - Completed 200 OK
2025-08-13 11:49:19 - GET "/image/thermostat.svg", parameters={}
2025-08-13 11:49:19 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 11:49:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:49:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:49:19 - Completed 200 OK
2025-08-13 11:49:19 - Completed 200 OK
2025-08-13 11:49:19 - GET "/image/toggle_off.svg", parameters={}
2025-08-13 11:49:19 - GET "/javascript/monitoringGateway.js", parameters={}
2025-08-13 11:49:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:49:19 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 11:49:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:49:19 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:49:19 - Completed 200 OK
2025-08-13 11:49:19 - Completed 200 OK
2025-08-13 11:49:19 - Completed 200 OK
2025-08-13 11:49:19 - GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 11:49:19 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#streamMonitoringData(String, String)
2025-08-13 11:49:25 - [6bae9c3b] HTTP GET http://localhost:8081/api/monitoring/gateway/rpi-mantu?ip=10.243.129.10
2025-08-13 11:49:25 - Started async request for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:49:25 - Exiting but response remains open for further handling
2025-08-13 11:49:27 - [6bae9c3b] [e75b798f-1] Response 200 OK
2025-08-13 11:49:27 - [6bae9c3b] [e75b798f-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:49:26, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:49:37 - [6bae9c3b] [e75b798f-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:49:37, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:49:48 - [6bae9c3b] [e75b798f-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:49:47, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:49:58 - [6bae9c3b] [e75b798f-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:49:58, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:50:08 - [6bae9c3b] [e75b798f-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:50:08, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:50:19 - [6bae9c3b] [e75b798f-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:50:18, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:50:29 - [6bae9c3b] [e75b798f-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:50:29, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:50:40 - [6bae9c3b] [e75b798f-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:50:39, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:50:50 - [6bae9c3b] [e75b798f-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:50:50, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:50:50 - Async result set for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:50:50 - Performing async dispatch for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:50:50 - Servlet container error notification for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:50:50 - "ASYNC" dispatch for GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 11:50:50 - Resume with async result [org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream fa (truncated)...]
2025-08-13 11:50:50 - Looks like the client has gone away: org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to flush: java.io.IOException: Une connexion établie a été abandonnée par un logiciel de votre ordinateur hôte (For a full stack trace, set the log category 'org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog@65e040e6' to TRACE level.)
2025-08-13 11:50:50 - Exiting from "ASYNC" dispatch, status 200
2025-08-13 11:51:25 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51s416ms315µs700ns).
2025-08-13 11:51:25 - [6bae9c3b] [e75b798f-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:51, system=MonitoringGatewayData.SystemInfo(hostname=t (truncated)...]
2025-08-13 11:51:25 - [183846] HTTP GET http://localhost:8081/api/monitoring/gateway/stop/rpi-mantu
2025-08-13 11:51:25 - [6bae9c3b] Cancel signal (to close connection)
2025-08-13 11:51:25 - Operator called default onErrorDropped
java.lang.IllegalStateException: ResponseBodyEmitter has already completed with error: org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to flush: java.io.IOException: Une connexion établie a été abandonnée par un logiciel de votre ordinateur hôte
	at org.springframework.util.Assert.state(Assert.java:101)
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:215)
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:99)
	at com.amaris.sensorprocessor.controller.GatewayController.lambda$streamMonitoringData$2(GatewayController.java:272)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:160)
	at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onNext(SecurityReactorContextConfiguration.java:186)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:197)
	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.onNextNewBuffer(FluxBufferPredicate.java:317)
	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.tryOnNext(FluxBufferPredicate.java:227)
	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.onNext(FluxBufferPredicate.java:200)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onNext(FluxPeekFuseable.java:503)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:180)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:453)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:724)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:843)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-13 11:51:45 - [183846] [49a2b887-1] Response 200 OK
2025-08-13 11:51:45 - Monitoring stopped for gateway rpi-mantu
2025-08-13 11:52:31 - GET "/manage-gateways/monitoring/gateway-003/view?ip=192.168.1.12", parameters={masked}
2025-08-13 11:52:31 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#monitoringView(String, String, Model)
2025-08-13 11:52:31 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 11:52:31 - Completed 200 OK
2025-08-13 11:52:31 - GET "/css/styles.css", parameters={}
2025-08-13 11:52:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:52:31 - Completed 200 OK
2025-08-13 11:52:31 - GET "/image/battery.svg", parameters={}
2025-08-13 11:52:31 - GET "/css/monitoringGateway.css", parameters={}
2025-08-13 11:52:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:52:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:52:31 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 11:52:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:52:31 - Completed 200 OK
2025-08-13 11:52:31 - Completed 200 OK
2025-08-13 11:52:31 - Completed 200 OK
2025-08-13 11:52:31 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 11:52:31 - GET "/image/thermostat.svg", parameters={}
2025-08-13 11:52:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:52:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:52:31 - Completed 200 OK
2025-08-13 11:52:31 - Completed 200 OK
2025-08-13 11:52:31 - GET "/javascript/monitoringGateway.js", parameters={}
2025-08-13 11:52:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:52:31 - GET "/image/toggle_off.svg", parameters={}
2025-08-13 11:52:31 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 11:52:31 - Completed 200 OK
2025-08-13 11:52:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:52:31 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:52:31 - Completed 200 OK
2025-08-13 11:52:31 - Completed 200 OK
2025-08-13 11:52:31 - GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 11:52:31 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#streamMonitoringData(String, String)
2025-08-13 11:52:31 - [7255aa71] HTTP GET http://localhost:8081/api/monitoring/gateway/rpi-mantu?ip=10.243.129.10
2025-08-13 11:52:31 - Started async request for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:52:31 - Exiting but response remains open for further handling
2025-08-13 11:52:33 - [7255aa71] [49a2b887-2] Response 200 OK
2025-08-13 11:52:33 - [7255aa71] [49a2b887-2] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:52:32, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:52:43 - [7255aa71] [49a2b887-2] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:52:43, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:52:54 - [7255aa71] [49a2b887-2] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:52:53, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:53:04 - [7255aa71] [49a2b887-2] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:53:04, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:53:15 - [7255aa71] [49a2b887-2] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:53:14, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:53:25 - [7255aa71] [49a2b887-2] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:53:25, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:53:35 - [7255aa71] [49a2b887-2] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:53:35, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:53:35 - Servlet container error notification for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:53:35 - Async result set for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:53:35 - Performing async dispatch for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:53:35 - "ASYNC" dispatch for GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 11:53:36 - Resume with async result [java.io.IOException: Une connexion établie a été abandonnée par un logiciel de votre ordinateur hôte]
2025-08-13 11:53:36 - Unresolved failure from "ASYNC" dispatch: java.io.IOException: Une connexion établie a été abandonnée par un logiciel de votre ordinateur hôte
2025-08-13 11:53:36 - Servlet.service() for servlet [dispatcherServlet] threw exception
java.io.IOException: Une connexion établie a été abandonnée par un logiciel de votre ordinateur hôte
	at java.base/sun.nio.ch.SocketDispatcher.write0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:54)
	at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:132)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:53)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:532)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:125)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1411)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:732)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:698)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:683)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:574)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:156)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:216)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1271)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:408)
	at org.apache.coyote.Response.action(Response.java:208)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:300)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:266)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:133)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:524)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest$LifecycleServletOutputStream.flush(StandardServletAsyncWebRequest.java:415)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1205)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1063)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:485)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.writeInternal(AbstractGenericHttpMessageConverter.java:135)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:235)
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$DefaultSseEmitterHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:310)
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$DefaultSseEmitterHandler.send(ResponseBodyEmitterReturnValueHandler.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:226)
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:217)
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:99)
	at com.amaris.sensorprocessor.controller.GatewayController.lambda$streamMonitoringData$2(GatewayController.java:272)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:160)
	at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onNext(SecurityReactorContextConfiguration.java:186)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:197)
	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.onNextNewBuffer(FluxBufferPredicate.java:317)
	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.tryOnNext(FluxBufferPredicate.java:227)
	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.onNext(FluxBufferPredicate.java:200)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onNext(FluxPeekFuseable.java:503)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:180)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:453)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:724)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:843)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-13 11:53:36 - [78b0cb09] HTTP GET http://localhost:8081/api/monitoring/gateway/stop/rpi-mantu
2025-08-13 11:53:36 - [7255aa71] Cancel signal (to close connection)
2025-08-13 11:53:36 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.io.IOException: Une connexion établie a été abandonnée par un logiciel de votre ordinateur hôte
	at java.base/sun.nio.ch.SocketDispatcher.write0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:54)
	at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:132)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:53)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:532)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:125)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1411)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:732)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:698)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:683)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:574)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:156)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:216)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1271)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:408)
	at org.apache.coyote.Response.action(Response.java:208)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:300)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:266)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:133)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:524)
	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest$LifecycleServletOutputStream.flush(StandardServletAsyncWebRequest.java:415)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1205)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1063)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:485)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.writeInternal(AbstractGenericHttpMessageConverter.java:135)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:235)
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$DefaultSseEmitterHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:310)
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$DefaultSseEmitterHandler.send(ResponseBodyEmitterReturnValueHandler.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:226)
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:217)
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:99)
	at com.amaris.sensorprocessor.controller.GatewayController.lambda$streamMonitoringData$2(GatewayController.java:272)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:160)
	at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onNext(SecurityReactorContextConfiguration.java:186)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:197)
	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.onNextNewBuffer(FluxBufferPredicate.java:317)
	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.tryOnNext(FluxBufferPredicate.java:227)
	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.onNext(FluxBufferPredicate.java:200)
	at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onNext(FluxPeekFuseable.java:503)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:180)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:453)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:724)
	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:256)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:292)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:401)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:435)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:843)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-13 11:53:36 - [78b0cb09] [5bbca86e-1] Response 200 OK
2025-08-13 11:53:36 - Monitoring stopped for gateway rpi-mantu
2025-08-13 11:56:18 - GET "/manage-gateways/monitoring/gateway-002/view?ip=192.168.1.11", parameters={masked}
2025-08-13 11:56:18 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#monitoringView(String, String, Model)
2025-08-13 11:56:18 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 11:56:18 - Completed 200 OK
2025-08-13 11:56:18 - GET "/css/styles.css", parameters={}
2025-08-13 11:56:18 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:56:18 - GET "/css/monitoringGateway.css", parameters={}
2025-08-13 11:56:18 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:56:18 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 11:56:18 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:56:18 - Completed 200 OK
2025-08-13 11:56:18 - GET "/image/battery.svg", parameters={}
2025-08-13 11:56:18 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:56:18 - Completed 200 OK
2025-08-13 11:56:18 - Completed 200 OK
2025-08-13 11:56:18 - Completed 200 OK
2025-08-13 11:56:18 - GET "/image/thermostat.svg", parameters={}
2025-08-13 11:56:18 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:56:18 - GET "/javascript/monitoringGateway.js", parameters={}
2025-08-13 11:56:18 - GET "/image/toggle_off.svg", parameters={}
2025-08-13 11:56:18 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:56:18 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:56:18 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 11:56:18 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:56:18 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 11:56:18 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 11:56:18 - Completed 200 OK
2025-08-13 11:56:18 - Completed 200 OK
2025-08-13 11:56:18 - Completed 200 OK
2025-08-13 11:56:18 - Completed 200 OK
2025-08-13 11:56:18 - Completed 200 OK
2025-08-13 11:56:18 - GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 11:56:18 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#streamMonitoringData(String, String)
2025-08-13 11:56:18 - [2b061c17] HTTP GET http://localhost:8081/api/monitoring/gateway/rpi-mantu?ip=10.243.129.10
2025-08-13 11:56:18 - Started async request for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:56:18 - Exiting but response remains open for further handling
2025-08-13 11:56:20 - [2b061c17] [2414ad78-1] Response 200 OK
2025-08-13 11:56:20 - [2b061c17] [2414ad78-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:56:19, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:56:30 - [2b061c17] [2414ad78-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:56:30, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:56:41 - [2b061c17] [2414ad78-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:56:40, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:56:51 - [2b061c17] [2414ad78-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:56:51, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:57:01 - [2b061c17] [2414ad78-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:57:01, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:57:12 - [2b061c17] [2414ad78-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T09:57:12, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 11:57:12 - Async result set for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:57:12 - Servlet container error notification for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:57:12 - Performing async dispatch for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 11:57:12 - "ASYNC" dispatch for GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 11:57:12 - Resume with async result [org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream fa (truncated)...]
2025-08-13 11:57:12 - Looks like the client has gone away: org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to flush: java.io.IOException: Une connexion établie a été abandonnée par un logiciel de votre ordinateur hôte (For a full stack trace, set the log category 'org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog@65e040e6' to TRACE level.)
2025-08-13 11:57:12 - Exiting from "ASYNC" dispatch, status 200
2025-08-13 11:57:12 - [33d0d513] HTTP GET http://localhost:8081/api/monitoring/gateway/stop/rpi-mantu
2025-08-13 11:57:12 - [2b061c17] Cancel signal (to close connection)
2025-08-13 11:57:12 - [33d0d513] [86348433-1] Response 200 OK
2025-08-13 11:57:12 - Monitoring stopped for gateway rpi-mantu
2025-08-13 11:59:43 - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-13 11:59:44 - Graceful shutdown complete
2025-08-13 11:59:46 - HikariPool-1 - Shutdown initiated...
2025-08-13 11:59:46 - HikariPool-1 - Shutdown completed.
2025-08-13 16:45:14 - Starting SensorprocessorApplication using Java 17.0.15 with PID 20004 (C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App\target\classes started by julien.orrado_sollan in C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App)
2025-08-13 16:45:14 - No active profile set, falling back to 1 default profile: "default"
2025-08-13 16:45:16 - Tomcat initialized with port 8080 (http)
2025-08-13 16:45:16 - Starting service [Tomcat]
2025-08-13 16:45:16 - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-13 16:45:16 - Initializing Spring embedded WebApplicationContext
2025-08-13 16:45:16 - Root WebApplicationContext: initialization completed in 1491 ms
2025-08-13 16:45:16 - HikariPool-1 - Starting...
2025-08-13 16:45:16 - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@697d6ded
2025-08-13 16:45:16 - HikariPool-1 - Start completed.
2025-08-13 16:45:17 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-13 16:45:17 - 20 mappings in 'requestMappingHandlerMapping'
2025-08-13 16:45:17 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-13 16:45:18 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-13 16:45:18 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-13 16:45:18 - Tomcat started on port 8080 (http) with context path '/'
2025-08-13 16:45:18 - Started SensorprocessorApplication in 4.207 seconds (process running for 4.528)
2025-08-13 16:45:26 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-13 16:45:26 - Initializing Servlet 'dispatcherServlet'
2025-08-13 16:45:26 - Detected StandardServletMultipartResolver
2025-08-13 16:45:26 - Detected AcceptHeaderLocaleResolver
2025-08-13 16:45:26 - Detected FixedThemeResolver
2025-08-13 16:45:26 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@70a186b3
2025-08-13 16:45:26 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@525ea475
2025-08-13 16:45:26 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-13 16:45:26 - Completed initialization in 1 ms
2025-08-13 16:45:26 - GET "/", parameters={}
2025-08-13 16:45:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:26 - Resource not found
2025-08-13 16:45:26 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-08-13 16:45:26 - Completed 404 NOT_FOUND
2025-08-13 16:45:26 - GET "/login", parameters={}
2025-08-13 16:45:26 - Mapped to com.amaris.sensorprocessor.controller.HomeController#loginPage()
2025-08-13 16:45:26 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 16:45:26 - Completed 200 OK
2025-08-13 16:45:26 - GET "/css/login-home.css", parameters={}
2025-08-13 16:45:26 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 16:45:26 - GET "/css/styles.css", parameters={}
2025-08-13 16:45:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:26 - Completed 200 OK
2025-08-13 16:45:26 - Completed 200 OK
2025-08-13 16:45:26 - Completed 200 OK
2025-08-13 16:45:26 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 16:45:26 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:26 - Completed 200 OK
2025-08-13 16:45:28 - GET "/login", parameters={}
2025-08-13 16:45:28 - Mapped to com.amaris.sensorprocessor.controller.HomeController#loginPage()
2025-08-13 16:45:28 - Selected '*/*' given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8]
2025-08-13 16:45:28 - Completed 200 OK
2025-08-13 16:45:30 - GET "/home", parameters={}
2025-08-13 16:45:30 - Mapped to com.amaris.sensorprocessor.controller.HomeController#homePage()
2025-08-13 16:45:30 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - GET "/css/styles.css", parameters={}
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 16:45:30 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 16:45:30 - GET "/css/login-home.css", parameters={}
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - GET "/image/gateway-icon.svg", parameters={}
2025-08-13 16:45:30 - GET "/image/user-icon.svg", parameters={}
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - GET "/image/manage-user-account.svg", parameters={}
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - GET "/favicon.ico", parameters={}
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Resource not found
2025-08-13 16:45:30 - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource favicon.ico.]
2025-08-13 16:45:30 - Completed 404 NOT_FOUND
2025-08-13 16:45:30 - "ERROR" dispatch for GET "/error", parameters={}
2025-08-13 16:45:30 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-08-13 16:45:30 - Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/cbor]
2025-08-13 16:45:30 - Writing [{timestamp=Wed Aug 13 16:45:30 CEST 2025, status=404, error=Not Found, path=/favicon.ico}]
2025-08-13 16:45:30 - Exiting from "ERROR" dispatch, status 404
2025-08-13 16:45:30 - GET "/manage-gateways", parameters={}
2025-08-13 16:45:30 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#manageGateways(Model)
2025-08-13 16:45:30 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - GET "/css/manageGateways.css", parameters={}
2025-08-13 16:45:30 - GET "/css/styles.css", parameters={}
2025-08-13 16:45:30 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 16:45:30 - GET "/javascript/manageGateways.js", parameters={}
2025-08-13 16:45:30 - GET "/image/calendar-icon.svg", parameters={}
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - GET "/image/search-icon.svg", parameters={}
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - GET "/image/monitoring-data.svg", parameters={}
2025-08-13 16:45:30 - GET "/image/edit-icon.svg", parameters={}
2025-08-13 16:45:30 - GET "/image/delete-icon.svg", parameters={}
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:30 - Completed 200 OK
2025-08-13 16:45:31 - GET "/manage-gateways/monitoring/gateway-001/view?ip=192.168.1.10", parameters={masked}
2025-08-13 16:45:31 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#monitoringView(String, String, Model)
2025-08-13 16:45:31 - Could not resolve parameter [1] in public java.lang.String com.amaris.sensorprocessor.controller.GatewayController.monitoringView(java.lang.String,java.lang.String,org.springframework.ui.Model): Required request parameter 'ipAddress' for method parameter type String is not present
2025-08-13 16:45:31 - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'ipAddress' for method parameter type String is not present]
2025-08-13 16:45:31 - Completed 400 BAD_REQUEST
2025-08-13 16:45:31 - "ERROR" dispatch for GET "/error?ip=192.168.1.10", parameters={masked}
2025-08-13 16:45:31 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-08-13 16:45:31 - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-13 16:45:31 - Exiting from "ERROR" dispatch, status 400
2025-08-13 16:45:40 - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-13 16:45:40 - Graceful shutdown complete
2025-08-13 16:45:40 - HikariPool-1 - Shutdown initiated...
2025-08-13 16:45:40 - HikariPool-1 - Shutdown completed.
2025-08-13 16:47:12 - Starting SensorprocessorApplication using Java 17.0.15 with PID 21516 (C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App\target\classes started by julien.orrado_sollan in C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App)
2025-08-13 16:47:12 - No active profile set, falling back to 1 default profile: "default"
2025-08-13 16:47:14 - Tomcat initialized with port 8080 (http)
2025-08-13 16:47:14 - Starting service [Tomcat]
2025-08-13 16:47:14 - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-13 16:47:14 - Initializing Spring embedded WebApplicationContext
2025-08-13 16:47:14 - Root WebApplicationContext: initialization completed in 1560 ms
2025-08-13 16:47:14 - HikariPool-1 - Starting...
2025-08-13 16:47:14 - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@faea4da
2025-08-13 16:47:14 - HikariPool-1 - Start completed.
2025-08-13 16:47:15 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-13 16:47:15 - 20 mappings in 'requestMappingHandlerMapping'
2025-08-13 16:47:15 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-13 16:47:15 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-13 16:47:15 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-13 16:47:16 - Tomcat started on port 8080 (http) with context path '/'
2025-08-13 16:47:16 - Started SensorprocessorApplication in 4.123 seconds (process running for 4.444)
2025-08-13 16:47:28 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-13 16:47:28 - Initializing Servlet 'dispatcherServlet'
2025-08-13 16:47:28 - Detected StandardServletMultipartResolver
2025-08-13 16:47:28 - Detected AcceptHeaderLocaleResolver
2025-08-13 16:47:28 - Detected FixedThemeResolver
2025-08-13 16:47:28 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@33231ef7
2025-08-13 16:47:28 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3f98c84b
2025-08-13 16:47:28 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-13 16:47:28 - Completed initialization in 2 ms
2025-08-13 16:47:28 - GET "/login", parameters={}
2025-08-13 16:47:28 - Mapped to com.amaris.sensorprocessor.controller.HomeController#loginPage()
2025-08-13 16:47:28 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 16:47:28 - Completed 200 OK
2025-08-13 16:47:28 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 16:47:28 - GET "/css/styles.css", parameters={}
2025-08-13 16:47:28 - GET "/css/login-home.css", parameters={}
2025-08-13 16:47:28 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:28 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:28 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:28 - Completed 200 OK
2025-08-13 16:47:28 - Completed 200 OK
2025-08-13 16:47:28 - Completed 200 OK
2025-08-13 16:47:28 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 16:47:28 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:28 - Completed 200 OK
2025-08-13 16:47:29 - GET "/home", parameters={}
2025-08-13 16:47:29 - Mapped to com.amaris.sensorprocessor.controller.HomeController#homePage()
2025-08-13 16:47:29 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 16:47:29 - Completed 200 OK
2025-08-13 16:47:29 - GET "/css/styles.css", parameters={}
2025-08-13 16:47:29 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:29 - GET "/css/login-home.css", parameters={}
2025-08-13 16:47:29 - Completed 200 OK
2025-08-13 16:47:29 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 16:47:29 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:29 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:29 - Completed 200 OK
2025-08-13 16:47:29 - GET "/image/gateway-icon.svg", parameters={}
2025-08-13 16:47:29 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 16:47:29 - GET "/image/user-icon.svg", parameters={}
2025-08-13 16:47:29 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:29 - Completed 200 OK
2025-08-13 16:47:29 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:29 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:29 - GET "/image/manage-user-account.svg", parameters={}
2025-08-13 16:47:29 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:29 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 16:47:29 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:29 - Completed 200 OK
2025-08-13 16:47:29 - Completed 200 OK
2025-08-13 16:47:29 - Completed 200 OK
2025-08-13 16:47:29 - Completed 200 OK
2025-08-13 16:47:29 - Completed 200 OK
2025-08-13 16:47:30 - GET "/manage-gateways", parameters={}
2025-08-13 16:47:30 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#manageGateways(Model)
2025-08-13 16:47:30 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 16:47:30 - Completed 200 OK
2025-08-13 16:47:30 - GET "/css/manageGateways.css", parameters={}
2025-08-13 16:47:30 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 16:47:30 - GET "/image/search-icon.svg", parameters={}
2025-08-13 16:47:30 - GET "/css/styles.css", parameters={}
2025-08-13 16:47:30 - GET "/image/calendar-icon.svg", parameters={}
2025-08-13 16:47:30 - GET "/javascript/manageGateways.js", parameters={}
2025-08-13 16:47:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:30 - Completed 200 OK
2025-08-13 16:47:30 - Completed 200 OK
2025-08-13 16:47:30 - Completed 200 OK
2025-08-13 16:47:30 - Completed 200 OK
2025-08-13 16:47:30 - Completed 200 OK
2025-08-13 16:47:30 - Completed 200 OK
2025-08-13 16:47:30 - GET "/image/delete-icon.svg", parameters={}
2025-08-13 16:47:30 - GET "/image/monitoring-data.svg", parameters={}
2025-08-13 16:47:30 - GET "/image/edit-icon.svg", parameters={}
2025-08-13 16:47:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:30 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:30 - Completed 200 OK
2025-08-13 16:47:30 - Completed 200 OK
2025-08-13 16:47:30 - Completed 200 OK
2025-08-13 16:47:32 - GET "/manage-gateways/monitoring/gateway-001/view?ip=192.168.1.10", parameters={masked}
2025-08-13 16:47:32 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#monitoringView(String, String, Model)
2025-08-13 16:47:32 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 16:47:32 - Completed 200 OK
2025-08-13 16:47:32 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 16:47:32 - GET "/image/battery.svg", parameters={}
2025-08-13 16:47:32 - GET "/css/styles.css", parameters={}
2025-08-13 16:47:32 - GET "/css/monitoringGateway.css", parameters={}
2025-08-13 16:47:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:32 - Completed 200 OK
2025-08-13 16:47:32 - Completed 200 OK
2025-08-13 16:47:32 - Completed 200 OK
2025-08-13 16:47:32 - Completed 200 OK
2025-08-13 16:47:32 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 16:47:32 - GET "/image/thermostat.svg", parameters={}
2025-08-13 16:47:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:32 - Completed 200 OK
2025-08-13 16:47:32 - Completed 200 OK
2025-08-13 16:47:32 - GET "/image/toggle_off.svg", parameters={}
2025-08-13 16:47:32 - GET "/javascript/monitoringGateway.js", parameters={}
2025-08-13 16:47:32 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 16:47:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:32 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:47:32 - Completed 200 OK
2025-08-13 16:47:32 - Completed 200 OK
2025-08-13 16:47:32 - Completed 200 OK
2025-08-13 16:47:32 - GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 16:47:32 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#streamMonitoringData(String, String)
2025-08-13 16:47:32 - [4821d363] HTTP GET http://monitoring:8081/api/monitoring/gateway/rpi-mantu?ip=10.243.129.10
2025-08-13 16:47:32 - Started async request for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 16:47:32 - Exiting but response remains open for further handling
2025-08-13 16:47:32 - Erreur lors de la récupération des données de monitoring
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://monitoring:8081/api/monitoring/gateway/rpi-mantu [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:325)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:443)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onError(SecurityReactorContextConfiguration.java:191)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:600)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:376)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:123)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:131)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.UnknownHostException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 16:47:32 - Async result set for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 16:47:32 - Performing async dispatch for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 16:47:32 - "ASYNC" dispatch for GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 16:47:32 - Resume with async result [org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monit (truncated)...]
2025-08-13 16:47:32 - Unresolved failure from "ASYNC" dispatch: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
2025-08-13 16:47:32 - Servlet.service() for servlet [dispatcherServlet] threw exception
io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 16:47:32 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries ] with root cause
io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 16:47:32 - "ERROR" dispatch for GET "/error?ip=10.243.129.10", parameters={masked}
2025-08-13 16:47:32 - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-08-13 16:47:32 - No match for [text/event-stream], supported: [application/json, application/*+json, application/cbor]
2025-08-13 16:47:32 - Using @ExceptionHandler org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#mediaTypeNotAcceptable(HttpServletRequest)
2025-08-13 16:47:32 - Using 'text/event-stream', given [text/event-stream] and supported [text/plain, */*, application/json, application/*+json, application/cbor]
2025-08-13 16:47:32 - Nothing to write: null body
2025-08-13 16:47:32 - Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: No acceptable representation]
2025-08-13 16:47:32 - Exiting from "ERROR" dispatch, status 500
2025-08-13 16:47:32 - Servlet container error notification for "/error"
2025-08-13 16:47:32 - [18b39aea] HTTP GET http://monitoring:8081/api/monitoring/gateway/stop/rpi-mantu
2025-08-13 16:47:32 - Erreur lors de l'arrêt du monitoring pour gateway rpi-mantu
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://monitoring:8081/api/monitoring/gateway/stop/rpi-mantu [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:325)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:443)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onError(SecurityReactorContextConfiguration.java:191)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:600)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:376)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:123)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:131)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.UnknownHostException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 16:47:32 - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://monitoring:8081/api/monitoring/gateway/stop/rpi-mantu [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:325)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:174)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:479)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:443)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:593)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.onError(SecurityReactorContextConfiguration.java:191)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:600)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:376)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:123)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:642)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:131)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1158)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.net.UnknownHostException: Failed to resolve 'monitoring' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:686)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:513)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:603)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:596)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:572)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:505)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:649)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:638)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:308)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:299)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1491)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:107)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsErrorCauseException: Query failed with NXDOMAIN
	at io.netty.resolver.dns.DnsResolveContext.onResponse(..)(Unknown Source)
2025-08-13 16:47:56 - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-13 16:47:56 - Graceful shutdown complete
2025-08-13 16:47:58 - HikariPool-1 - Shutdown initiated...
2025-08-13 16:47:58 - HikariPool-1 - Shutdown completed.
2025-08-13 16:48:35 - Starting SensorprocessorApplication using Java 17.0.15 with PID 26300 (C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App\target\classes started by julien.orrado_sollan in C:\Users\julien.orrado_sollan\GitHub\Sensor_Management_App)
2025-08-13 16:48:35 - No active profile set, falling back to 1 default profile: "default"
2025-08-13 16:48:36 - Tomcat initialized with port 8080 (http)
2025-08-13 16:48:37 - Starting service [Tomcat]
2025-08-13 16:48:37 - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-13 16:48:37 - Initializing Spring embedded WebApplicationContext
2025-08-13 16:48:37 - Root WebApplicationContext: initialization completed in 1299 ms
2025-08-13 16:48:37 - HikariPool-1 - Starting...
2025-08-13 16:48:37 - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@dd3f8aa
2025-08-13 16:48:37 - HikariPool-1 - Start completed.
2025-08-13 16:48:38 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-08-13 16:48:38 - 20 mappings in 'requestMappingHandlerMapping'
2025-08-13 16:48:38 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-13 16:48:38 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-13 16:48:38 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-13 16:48:39 - Tomcat started on port 8080 (http) with context path '/'
2025-08-13 16:48:39 - Started SensorprocessorApplication in 3.848 seconds (process running for 4.175)
2025-08-13 16:48:50 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-13 16:48:50 - Initializing Servlet 'dispatcherServlet'
2025-08-13 16:48:50 - Detected StandardServletMultipartResolver
2025-08-13 16:48:50 - Detected AcceptHeaderLocaleResolver
2025-08-13 16:48:50 - Detected FixedThemeResolver
2025-08-13 16:48:50 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@61e2eb7f
2025-08-13 16:48:50 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@e453069
2025-08-13 16:48:50 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-13 16:48:50 - Completed initialization in 0 ms
2025-08-13 16:48:50 - GET "/login", parameters={}
2025-08-13 16:48:50 - Mapped to com.amaris.sensorprocessor.controller.HomeController#loginPage()
2025-08-13 16:48:50 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 16:48:50 - Completed 200 OK
2025-08-13 16:48:50 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 16:48:50 - GET "/css/styles.css", parameters={}
2025-08-13 16:48:50 - GET "/css/login-home.css", parameters={}
2025-08-13 16:48:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:50 - Completed 200 OK
2025-08-13 16:48:50 - Completed 200 OK
2025-08-13 16:48:50 - Completed 200 OK
2025-08-13 16:48:50 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 16:48:50 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:50 - Completed 200 OK
2025-08-13 16:48:52 - GET "/home", parameters={}
2025-08-13 16:48:52 - Mapped to com.amaris.sensorprocessor.controller.HomeController#homePage()
2025-08-13 16:48:52 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 16:48:52 - Completed 200 OK
2025-08-13 16:48:52 - GET "/css/login-home.css", parameters={}
2025-08-13 16:48:52 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:52 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 16:48:52 - GET "/css/styles.css", parameters={}
2025-08-13 16:48:52 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:52 - GET "/image/gateway-icon.svg", parameters={}
2025-08-13 16:48:52 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:52 - GET "/image/user-icon.svg", parameters={}
2025-08-13 16:48:52 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 16:48:52 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:52 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:52 - Completed 200 OK
2025-08-13 16:48:52 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:52 - Completed 200 OK
2025-08-13 16:48:52 - Completed 200 OK
2025-08-13 16:48:52 - GET "/image/manage-user-account.svg", parameters={}
2025-08-13 16:48:52 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:52 - Completed 200 OK
2025-08-13 16:48:52 - Completed 200 OK
2025-08-13 16:48:52 - Completed 200 OK
2025-08-13 16:48:52 - Completed 200 OK
2025-08-13 16:48:52 - GET "/image/mantu-background.jpg", parameters={}
2025-08-13 16:48:52 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:52 - Completed 200 OK
2025-08-13 16:48:53 - GET "/manage-gateways", parameters={}
2025-08-13 16:48:53 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#manageGateways(Model)
2025-08-13 16:48:53 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 16:48:53 - Completed 200 OK
2025-08-13 16:48:53 - GET "/image/calendar-icon.svg", parameters={}
2025-08-13 16:48:53 - GET "/image/mantu-logo.jpg", parameters={}
2025-08-13 16:48:53 - GET "/css/styles.css", parameters={}
2025-08-13 16:48:53 - GET "/css/manageGateways.css", parameters={}
2025-08-13 16:48:53 - GET "/javascript/manageGateways.js", parameters={}
2025-08-13 16:48:53 - GET "/image/search-icon.svg", parameters={}
2025-08-13 16:48:53 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:53 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:53 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:53 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:53 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:53 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:53 - Completed 200 OK
2025-08-13 16:48:53 - Completed 200 OK
2025-08-13 16:48:53 - Completed 200 OK
2025-08-13 16:48:53 - Completed 200 OK
2025-08-13 16:48:53 - Completed 200 OK
2025-08-13 16:48:53 - Completed 200 OK
2025-08-13 16:48:53 - GET "/image/monitoring-data.svg", parameters={}
2025-08-13 16:48:53 - GET "/image/delete-icon.svg", parameters={}
2025-08-13 16:48:53 - GET "/image/edit-icon.svg", parameters={}
2025-08-13 16:48:53 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:53 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:53 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:53 - Completed 200 OK
2025-08-13 16:48:53 - Completed 200 OK
2025-08-13 16:48:53 - Completed 200 OK
2025-08-13 16:48:55 - GET "/manage-gateways/monitoring/gateway-001/view?ip=192.168.1.10", parameters={masked}
2025-08-13 16:48:55 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#monitoringView(String, String, Model)
2025-08-13 16:48:55 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-08-13 16:48:55 - Completed 200 OK
2025-08-13 16:48:55 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 16:48:55 - GET "/css/styles.css", parameters={}
2025-08-13 16:48:55 - GET "/image/battery.svg", parameters={}
2025-08-13 16:48:55 - GET "/css/monitoringGateway.css", parameters={}
2025-08-13 16:48:55 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:55 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:55 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:55 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:55 - Completed 200 OK
2025-08-13 16:48:55 - Completed 200 OK
2025-08-13 16:48:55 - Completed 200 OK
2025-08-13 16:48:55 - Completed 200 OK
2025-08-13 16:48:55 - GET "/image/sensor-icon.svg", parameters={}
2025-08-13 16:48:55 - GET "/image/thermostat.svg", parameters={}
2025-08-13 16:48:55 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:55 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:55 - GET "/javascript/monitoringGateway.js", parameters={}
2025-08-13 16:48:55 - GET "/image/toggle_on.svg", parameters={}
2025-08-13 16:48:55 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:55 - GET "/image/toggle_off.svg", parameters={}
2025-08-13 16:48:55 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:55 - Completed 200 OK
2025-08-13 16:48:55 - Completed 200 OK
2025-08-13 16:48:55 - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-13 16:48:55 - Completed 200 OK
2025-08-13 16:48:55 - Completed 200 OK
2025-08-13 16:48:55 - Completed 200 OK
2025-08-13 16:48:55 - GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 16:48:55 - Mapped to com.amaris.sensorprocessor.controller.GatewayController#streamMonitoringData(String, String)
2025-08-13 16:48:55 - [12cee1d9] HTTP GET http://localhost:8081/api/monitoring/gateway/rpi-mantu?ip=10.243.129.10
2025-08-13 16:48:55 - Started async request for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 16:48:55 - Exiting but response remains open for further handling
2025-08-13 16:48:58 - [12cee1d9] [1f0584e5-1] Response 200 OK
2025-08-13 16:48:59 - [12cee1d9] [1f0584e5-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T14:48:58, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 16:49:09 - [12cee1d9] [1f0584e5-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T14:49:09, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 16:49:18 - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-13 16:49:19 - [12cee1d9] [1f0584e5-1] Decoded [MonitoringGatewayData(timestamp=2025-08-13T14:49:19, system=MonitoringGatewayData.SystemInfo(hostnam (truncated)...]
2025-08-13 16:49:19 - Async result set for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 16:49:19 - Performing async dispatch for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 16:49:19 - Servlet container error notification for "/manage-gateways/monitoring/rpi-mantu/stream"
2025-08-13 16:49:19 - "ASYNC" dispatch for GET "/manage-gateways/monitoring/rpi-mantu/stream?ip=10.243.129.10", parameters={masked}
2025-08-13 16:49:19 - Resume with async result [org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream fa (truncated)...]
2025-08-13 16:49:19 - Looks like the client has gone away: org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to flush: java.io.IOException: Une connexion établie a été abandonnée par un logiciel de votre ordinateur hôte (For a full stack trace, set the log category 'org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog@69f1a7ba' to TRACE level.)
2025-08-13 16:49:19 - Exiting from "ASYNC" dispatch, status 200
2025-08-13 16:49:19 - [e3154b2] HTTP GET http://localhost:8081/api/monitoring/gateway/stop/rpi-mantu
2025-08-13 16:49:19 - [12cee1d9] Cancel signal (to close connection)
2025-08-13 16:49:19 - Graceful shutdown complete
2025-08-13 16:49:19 - [d63d2031-1, L:/127.0.0.1:61638 ! R:localhost/127.0.0.1:8081] The connection observed an error
reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response
2025-08-13 16:49:19 - Erreur lors de l'arrêt du monitoring pour gateway rpi-mantu
org.springframework.web.reactive.function.client.WebClientRequestException: Connection prematurely closed BEFORE response
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://localhost:8081/api/monitoring/gateway/stop/rpi-mantu [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
		at reactor.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:341)
		at reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:73)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
		at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
		at io.netty.handler.codec.http.HttpContentDecoder.channelInactive(HttpContentDecoder.java:235)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:418)
		at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:377)
		at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:410)
		at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:221)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1352)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:850)
		at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasksFrom(SingleThreadEventExecutor.java:428)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:377)
		at io.netty.util.concurrent.SingleThreadEventExecutor.confirmShutdown(SingleThreadEventExecutor.java:763)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:592)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response
2025-08-13 16:49:19 - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.reactive.function.client.WebClientRequestException: Connection prematurely closed BEFORE response
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: Connection prematurely closed BEFORE response
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET http://localhost:8081/api/monitoring/gateway/stop/rpi-mantu [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:137)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1742)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:417)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:715)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:225)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:478)
		at reactor.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:341)
		at reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:73)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
		at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:81)
		at io.netty.handler.codec.http.HttpContentDecoder.channelInactive(HttpContentDecoder.java:235)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:418)
		at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:412)
		at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:377)
		at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:410)
		at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:221)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:303)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1352)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:850)
		at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:811)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasksFrom(SingleThreadEventExecutor.java:428)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:377)
		at io.netty.util.concurrent.SingleThreadEventExecutor.confirmShutdown(SingleThreadEventExecutor.java:763)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:592)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response
2025-08-13 16:49:21 - HikariPool-1 - Shutdown initiated...
2025-08-13 16:49:21 - HikariPool-1 - Shutdown completed.
